/*
 * font_square.h
 *
 */

/**********************************************************************************

Description:		PixBlock character font

Author:				Frank Andre
Copyright 2015:		Frank Andre
License:			see "license.md"
Disclaimer:			This software is provided by the copyright holder "as is" and any 
					express or implied warranties, including, but not limited to, the 
					implied warranties of merchantability and fitness for a particular 
					purpose are disclaimed. In no event shall the copyright owner or 
					contributors be liable for any direct, indirect, incidental, 
					special, exemplary, or consequential damages (including, but not 
					limited to, procurement of substitute goods or services; loss of 
					use, data, or profits; or business interruption) however caused 
					and on any theory of liability, whether in contract, strict 
					liability, or tort (including negligence or otherwise) arising 
					in any way out of the use of this software, even if advised of 
					the possibility of such damage.
					
**********************************************************************************/

#ifndef FONT_SQUARE_H
#define FONT_SQUARE_H


#define CHAR_BASE_SQUARE	32		// character code of first character


// character pixel data
// first byte = character width (must be >= 1)

FLASHDATA square_chr_032[] = {0x04, 0x00, 0x00, 0x00, 0x00};	// space
FLASHDATA square_chr_033[] = {0x02, 0x5F, 0x00};	// !
FLASHDATA square_chr_034[] = {0x04, 0x03, 0x00, 0x03, 0x00};	// "
FLASHDATA square_chr_035[] = {0x06, 0x14, 0x7F, 0x14, 0x7F, 0x14, 0x00};	// #
FLASHDATA square_chr_036[] = {0x06, 0x2E, 0x2A, 0x7F, 0x2A, 0x3A, 0x00};	// $
FLASHDATA square_chr_037[] = {0x06, 0x63, 0x13, 0x08, 0x64, 0x63, 0x00};	// %
FLASHDATA square_chr_038[] = {0x06, 0x7F, 0x49, 0x7E, 0x28, 0x40, 0x00};	// &
FLASHDATA square_chr_039[] = {0x02, 0x07, 0x00};	// '
FLASHDATA square_chr_040[] = {0x04, 0x3E, 0x41, 0x41, 0x00};	// (
FLASHDATA square_chr_041[] = {0x04, 0x41, 0x41, 0x3E, 0x00};	// )
FLASHDATA square_chr_042[] = {0x06, 0x22, 0x14, 0x6B, 0x14, 0x22, 0x00};	// *
FLASHDATA square_chr_043[] = {0x06, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x00};	// +
FLASHDATA square_chr_044[] = {0x02, 0xE0, 0x00};	// ,
FLASHDATA square_chr_045[] = {0x05, 0x08, 0x08, 0x08, 0x08, 0x00};	// -
FLASHDATA square_chr_046[] = {0x02, 0x40, 0x00};	// .
FLASHDATA square_chr_047[] = {0x06, 0x60, 0x10, 0x08, 0x04, 0x03, 0x00};	// /
FLASHDATA square_chr_048[] = {0x05, 0x7F, 0x41, 0x41, 0x7F, 0x00};	// 0
FLASHDATA square_chr_049[] = {0x03, 0x01, 0x7F, 0x00};	// 1
FLASHDATA square_chr_050[] = {0x05, 0x79, 0x49, 0x49, 0x4F, 0x00};	// 2
FLASHDATA square_chr_051[] = {0x05, 0x41, 0x49, 0x49, 0x7F, 0x00};	// 3
FLASHDATA square_chr_052[] = {0x05, 0x0F, 0x08, 0x08, 0x7F, 0x00};	// 4
FLASHDATA square_chr_053[] = {0x05, 0x4F, 0x49, 0x49, 0x79, 0x00};	// 5
FLASHDATA square_chr_054[] = {0x05, 0x7F, 0x49, 0x49, 0x79, 0x00};	// 6
FLASHDATA square_chr_055[] = {0x05, 0x01, 0x01, 0x01, 0x7F, 0x00};	// 7
FLASHDATA square_chr_056[] = {0x05, 0x7F, 0x49, 0x49, 0x7F, 0x00};	// 8
FLASHDATA square_chr_057[] = {0x05, 0x4F, 0x49, 0x49, 0x7F, 0x00};	// 9
FLASHDATA square_chr_058[] = {0x02, 0x28, 0x00};	// :
FLASHDATA square_chr_059[] = {0x02, 0xE8, 0x00};	// ;
FLASHDATA square_chr_060[] = {0x05, 0x08, 0x14, 0x22, 0x41, 0x00};	// <
FLASHDATA square_chr_061[] = {0x05, 0x14, 0x14, 0x14, 0x14, 0x00};	// =
FLASHDATA square_chr_062[] = {0x05, 0x41, 0x22, 0x14, 0x08, 0x00};	// >
FLASHDATA square_chr_063[] = {0x05, 0x03, 0x59, 0x09, 0x0F, 0x00};	// ?
FLASHDATA square_chr_064[] = {0x06, 0x33, 0x49, 0x79, 0x41, 0x7F, 0x00};	// @
FLASHDATA square_chr_065[] = {0x05, 0x7F, 0x09, 0x09, 0x7F, 0x00};	// A
FLASHDATA square_chr_066[] = {0x05, 0x7F, 0x49, 0x4F, 0x78, 0x00};	// B
FLASHDATA square_chr_067[] = {0x05, 0x7F, 0x41, 0x41, 0x63, 0x00};	// C
FLASHDATA square_chr_068[] = {0x05, 0x7F, 0x41, 0x42, 0x3C, 0x00};	// D
FLASHDATA square_chr_069[] = {0x05, 0x7F, 0x49, 0x49, 0x41, 0x00};	// E
FLASHDATA square_chr_070[] = {0x05, 0x7F, 0x09, 0x09, 0x01, 0x00};	// F
FLASHDATA square_chr_071[] = {0x05, 0x7F, 0x41, 0x49, 0x7B, 0x00};	// G
FLASHDATA square_chr_072[] = {0x05, 0x7F, 0x08, 0x08, 0x7F, 0x00};	// H
FLASHDATA square_chr_073[] = {0x02, 0x7F, 0x00};	// I
FLASHDATA square_chr_074[] = {0x05, 0x60, 0x40, 0x40, 0x7F, 0x00};	// J
FLASHDATA square_chr_075[] = {0x05, 0x7F, 0x08, 0x0C, 0x73, 0x00};	// K
FLASHDATA square_chr_076[] = {0x05, 0x7F, 0x40, 0x40, 0x40, 0x00};	// L
FLASHDATA square_chr_077[] = {0x06, 0x7F, 0x01, 0x0F, 0x01, 0x7F, 0x00};	// M
FLASHDATA square_chr_078[] = {0x05, 0x7F, 0x01, 0x01, 0x7F, 0x00};	// N
FLASHDATA square_chr_079[] = {0x05, 0x7F, 0x41, 0x41, 0x7F, 0x00};	// O
FLASHDATA square_chr_080[] = {0x05, 0x7F, 0x09, 0x09, 0x0F, 0x00};	// P
FLASHDATA square_chr_081[] = {0x05, 0x7F, 0x41, 0xC1, 0xBF, 0x00};	// Q
FLASHDATA square_chr_082[] = {0x05, 0x7F, 0x19, 0x29, 0x4F, 0x00};	// R
FLASHDATA square_chr_083[] = {0x05, 0x6E, 0x49, 0x49, 0x7B, 0x00};	// S
FLASHDATA square_chr_084[] = {0x06, 0x01, 0x01, 0x7F, 0x01, 0x01, 0x00};	// T
FLASHDATA square_chr_085[] = {0x05, 0x7F, 0x40, 0x40, 0x7F, 0x00};	// U
FLASHDATA square_chr_086[] = {0x06, 0x7F, 0x40, 0x30, 0x0C, 0x03, 0x00};	// V
FLASHDATA square_chr_087[] = {0x06, 0x7F, 0x40, 0x78, 0x40, 0x7F, 0x00};	// W
FLASHDATA square_chr_088[] = {0x06, 0x41, 0x22, 0x1C, 0x22, 0x41, 0x00};	// X
FLASHDATA square_chr_089[] = {0x06, 0x0F, 0x08, 0x78, 0x08, 0x0F, 0x00};	// Y
FLASHDATA square_chr_090[] = {0x05, 0x71, 0x49, 0x45, 0x43, 0x00};	// Z
FLASHDATA square_chr_091[] = {0x04, 0x7F, 0x41, 0x41, 0x00};	// [
FLASHDATA square_chr_092[] = {0x06, 0x03, 0x04, 0x08, 0x10, 0x60, 0x00};	// backslash
FLASHDATA square_chr_093[] = {0x04, 0x41, 0x41, 0x7F, 0x00};	// ]
FLASHDATA square_chr_094[] = {0x04, 0x02, 0x01, 0x02, 0x00};	// ^
FLASHDATA square_chr_095[] = {0x05, 0x40, 0x40, 0x40, 0x40, 0x00};	// _
FLASHDATA square_chr_096[] = {0x02, 0x07, 0x00};	// `
FLASHDATA square_chr_097[] = {0x05, 0x70, 0x54, 0x54, 0x7C, 0x00};	// a
FLASHDATA square_chr_098[] = {0x05, 0x7F, 0x44, 0x44, 0x7C, 0x00};	// b
FLASHDATA square_chr_099[] = {0x05, 0x7C, 0x44, 0x44, 0x64, 0x00};	// c
FLASHDATA square_chr_100[] = {0x05, 0x7C, 0x44, 0x44, 0x7F, 0x00};	// d
FLASHDATA square_chr_101[] = {0x05, 0x7C, 0x54, 0x54, 0x5C, 0x00};	// e
FLASHDATA square_chr_102[] = {0x05, 0x04, 0x7F, 0x05, 0x01, 0x00};	// f
FLASHDATA square_chr_103[] = {0x05, 0x3C, 0xA4, 0xA4, 0xFC, 0x00};	// g
FLASHDATA square_chr_104[] = {0x05, 0x7F, 0x08, 0x08, 0x78, 0x00};	// h
FLASHDATA square_chr_105[] = {0x02, 0x7D, 0x00};	// i
FLASHDATA square_chr_106[] = {0x04, 0xC0, 0x80, 0xFD, 0x00};	// j
FLASHDATA square_chr_107[] = {0x05, 0x7F, 0x08, 0x0E, 0x70, 0x00};	// k
FLASHDATA square_chr_108[] = {0x03, 0x01, 0x7F, 0x00};	// l
FLASHDATA square_chr_109[] = {0x06, 0x7C, 0x04, 0x7C, 0x04, 0x7C, 0x00};	// m
FLASHDATA square_chr_110[] = {0x05, 0x7C, 0x04, 0x04, 0x7C, 0x00};	// n
FLASHDATA square_chr_111[] = {0x05, 0x7C, 0x44, 0x44, 0x7C, 0x00};	// o
FLASHDATA square_chr_112[] = {0x05, 0xFC, 0x24, 0x24, 0x3C, 0x00};	// p
FLASHDATA square_chr_113[] = {0x05, 0x3C, 0x24, 0x24, 0xFC, 0x00};	// q
FLASHDATA square_chr_114[] = {0x04, 0x7C, 0x04, 0x04, 0x00};	// r
FLASHDATA square_chr_115[] = {0x05, 0x58, 0x54, 0x54, 0x74, 0x00};	// s
FLASHDATA square_chr_116[] = {0x05, 0x04, 0x7F, 0x44, 0x44, 0x00};	// t
FLASHDATA square_chr_117[] = {0x05, 0x7C, 0x40, 0x40, 0x7C, 0x00};	// u
FLASHDATA square_chr_118[] = {0x05, 0x7C, 0x40, 0x30, 0x0C, 0x00};	// v
FLASHDATA square_chr_119[] = {0x06, 0x7C, 0x40, 0x78, 0x40, 0x7C, 0x00};	// w
FLASHDATA square_chr_120[] = {0x06, 0x44, 0x28, 0x10, 0x28, 0x44, 0x00};	// x
FLASHDATA square_chr_121[] = {0x05, 0x3C, 0xA0, 0xA0, 0xFC, 0x00};	// y
FLASHDATA square_chr_122[] = {0x05, 0x64, 0x54, 0x4C, 0x44, 0x00};	// z
FLASHDATA square_chr_123[] = {0x04, 0x08, 0x77, 0x41, 0x00};	// {
FLASHDATA square_chr_124[] = {0x02, 0x7F, 0x00};	// |
FLASHDATA square_chr_125[] = {0x04, 0x41, 0x77, 0x08, 0x00};	// }
FLASHDATA square_chr_126[] = {0x06, 0x0C, 0x04, 0x1C, 0x10, 0x18, 0x00};	// ~
FLASHDATA square_chr_127[] = {0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};	// del

FLASHDATA square_chr_162[] = {0x06, 0x3E, 0x22, 0x7F, 0x22, 0x32, 0x00};	// 
FLASHDATA square_chr_163[] = {0x06, 0x48, 0x7F, 0x49, 0x41, 0x60, 0x00};	// 
FLASHDATA square_chr_164[] = {0x06, 0x3E, 0x49, 0x49, 0x49, 0x63, 0x00};	// 
FLASHDATA square_chr_165[] = {0x06, 0x15, 0x16, 0x7C, 0x16, 0x15, 0x00};	// 

FLASHDATA square_chr_167[] = {0x06, 0x60, 0x4F, 0x55, 0x79, 0x03, 0x00};	// 

FLASHDATA square_chr_169[] = {0x06, 0x7F, 0x41, 0x5D, 0x49, 0x7F, 0x00};	// 

FLASHDATA square_chr_171[] = {0x07, 0x08, 0x14, 0x22, 0x08, 0x14, 0x22, 0x00};	// 
FLASHDATA square_chr_172[] = {0x05, 0x08, 0x08, 0x08, 0x38, 0x00};	// 

FLASHDATA square_chr_174[] = {0x06, 0x7F, 0x41, 0x65, 0x51, 0x7F, 0x00};	// 

FLASHDATA square_chr_176[] = {0x05, 0x0F, 0x09, 0x09, 0x0F, 0x00};	// 
FLASHDATA square_chr_177[] = {0x04, 0x24, 0x2E, 0x24, 0x00};	// 
FLASHDATA square_chr_178[] = {0x04, 0x1D, 0x15, 0x17, 0x00};	// 
FLASHDATA square_chr_179[] = {0x04, 0x11, 0x15, 0x1F, 0x00};	// 

FLASHDATA square_chr_181[] = {0x05, 0xFC, 0x20, 0x20, 0x3C, 0x00};	// 

FLASHDATA square_chr_183[] = {0x03, 0x0C, 0x0C, 0x00};	// 

FLASHDATA square_chr_185[] = {0x03, 0x01, 0x1F, 0x00};	// 

FLASHDATA square_chr_187[] = {0x07, 0x22, 0x14, 0x08, 0x22, 0x14, 0x08, 0x00};	// 

FLASHDATA square_chr_196[] = {0x05, 0x7D, 0x14, 0x14, 0x7D, 0x00};	// 

FLASHDATA square_chr_214[] = {0x05, 0x7D, 0x44, 0x44, 0x7D, 0x00};	// 

FLASHDATA square_chr_220[] = {0x05, 0x7D, 0x40, 0x40, 0x7D, 0x00};	// 

FLASHDATA square_chr_223[] = {0x05, 0xFF, 0x49, 0x4F, 0x78, 0x00};	// 

FLASHDATA square_chr_228[] = {0x05, 0x71, 0x54, 0x54, 0x7D, 0x00};	// 

FLASHDATA square_chr_246[] = {0x05, 0x7D, 0x44, 0x44, 0x7D, 0x00};	// 
FLASHDATA square_chr_247[] = {0x06, 0x08, 0x08, 0x2A, 0x08, 0x08, 0x00};	// 

FLASHDATA square_chr_252[] = {0x05, 0x7D, 0x40, 0x40, 0x7D, 0x00};	// 




FLASHDATA* const font_square[] = {
	square_chr_032, square_chr_033, square_chr_034, square_chr_035,
	square_chr_036, square_chr_037, square_chr_038, square_chr_039,
	square_chr_040, square_chr_041, square_chr_042, square_chr_043,
	square_chr_044, square_chr_045, square_chr_046, square_chr_047,
	square_chr_048, square_chr_049, square_chr_050, square_chr_051,
	square_chr_052, square_chr_053, square_chr_054, square_chr_055,
	square_chr_056, square_chr_057, square_chr_058, square_chr_059,
	square_chr_060, square_chr_061, square_chr_062, square_chr_063,
	square_chr_064, square_chr_065, square_chr_066, square_chr_067,
	square_chr_068, square_chr_069, square_chr_070, square_chr_071,
	square_chr_072, square_chr_073, square_chr_074, square_chr_075,
	square_chr_076, square_chr_077, square_chr_078, square_chr_079,
	square_chr_080, square_chr_081, square_chr_082, square_chr_083,
	square_chr_084, square_chr_085, square_chr_086, square_chr_087,
	square_chr_088, square_chr_089, square_chr_090, square_chr_091,
	square_chr_092, square_chr_093, square_chr_094, square_chr_095,
	square_chr_096, square_chr_097, square_chr_098, square_chr_099,
	square_chr_100, square_chr_101, square_chr_102, square_chr_103,
	square_chr_104, square_chr_105, square_chr_106, square_chr_107,
	square_chr_108, square_chr_109, square_chr_110, square_chr_111,
	square_chr_112, square_chr_113, square_chr_114, square_chr_115,
	square_chr_116, square_chr_117, square_chr_118, square_chr_119,
	square_chr_120, square_chr_121, square_chr_122, square_chr_123,
	square_chr_124, square_chr_125, square_chr_126, square_chr_127,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , square_chr_162, square_chr_163,
	square_chr_164, square_chr_165, UNDEF         , square_chr_167,
	UNDEF         , square_chr_169, UNDEF         , square_chr_171,
	square_chr_172, UNDEF         , square_chr_174, UNDEF         ,
	square_chr_176, square_chr_177, square_chr_178, square_chr_179,
	UNDEF         , square_chr_181, UNDEF         , square_chr_183,
	UNDEF         , square_chr_185, UNDEF         , square_chr_187,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	square_chr_196, UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , square_chr_214, UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	square_chr_220, UNDEF         , UNDEF         , square_chr_223,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	square_chr_228, UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	UNDEF         , UNDEF         , square_chr_246, square_chr_247,
	UNDEF         , UNDEF         , UNDEF         , UNDEF         ,
	square_chr_252, UNDEF         , UNDEF         , UNDEF         
};


#endif /* FONT_SQUARE_H*/
